import { Rect } from "./Rect";
import { Vector2 } from "../math/Vector2";
import { Quaternion } from "../math/Quaternion";
import { Vector3 } from "../math/Vector3";
import { UISize } from "./UISize";
import { Matrix44 } from "../math/Matrix44";
import { Color } from "../graphics/Color";
import { SerializedObject } from "../core/SerializableObject";
import { Component } from "../core/Component";
import { ObjectProps } from "../core/Types";
export declare class Layout extends Component {
    static horizontalAlignmentPropertyKey: string;
    static verticalAlignmentPropertyKey: string;
    static rotationKey: string;
    static offsetKey: string;
    static scaleKey: string;
    get version(): number;
    get offset(): Vector3;
    get pivot(): Vector2;
    get width(): UISize;
    get height(): UISize;
    get horizontalAlignment(): number;
    get verticalAlignment(): number;
    set horizontalAlignment(value: number);
    set verticalAlignment(value: number);
    get margin(): Rect;
    get rotation(): Quaternion;
    get scale(): Vector2;
    get tint(): Color;
    set tint(tint: Color);
    get inheritTint(): boolean;
    set inheritTint(inherit: boolean);
    set offset(offset: Vector3);
    set rotation(rotation: Quaternion);
    set scale(scale: Vector2);
    get actualWidth(): number;
    get actualHeight(): number;
    get worldMatrix(): Matrix44;
    get finalTint(): Color;
    set actualWidth(w: number);
    set actualHeight(h: number);
    get right(): Vector3;
    get forward(): Vector3;
    get up(): Vector3;
    get localRight(): Vector3;
    get localForward(): Vector3;
    get localUp(): Vector3;
    get absoluteScale(): Vector3;
    get absolutePos(): Vector3;
    private _horizontalAlignment;
    private _verticalAlignment;
    private _pivot;
    private _offset;
    private _width;
    private _height;
    private _margin;
    private _rotation;
    private _scale;
    private _tint;
    private _inheritTint;
    private _worldMatrix;
    private _actualWidth;
    private _actualHeight;
    private _finalTint;
    constructor(props?: ObjectProps<Layout>);
    upgrade(json: SerializedObject, previousVersion: number): SerializedObject;
}
