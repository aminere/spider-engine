import { UIElement } from "./UIElement";
import { UIFill } from "./UIFill";
import { SerializedObject } from "../core/SerializableObject";
import { Entity } from "../core/Entity";
import { VertexBuffer } from "../graphics/VertexBuffer";
import { ObjectProps } from "../core/Types";
export declare class Button extends UIElement {
    get version(): number;
    get normal(): UIFill | undefined;
    get highlighted(): UIFill | undefined;
    get pressed(): UIFill | undefined;
    get disabled(): UIFill | undefined;
    set normal(fill: UIFill | undefined);
    set highlighted(fill: UIFill | undefined);
    set pressed(fill: UIFill | undefined);
    set disabled(fill: UIFill | undefined);
    set pushed(pushed: boolean);
    get pushed(): boolean;
    get enabled(): boolean;
    set enabled(enabled: boolean);
    get currentFill(): UIFill | undefined;
    private _enabled;
    private _pushed;
    private _normal;
    private _highlighted;
    private _pressed;
    private _disabled;
    private _touchInteractions;
    constructor(props?: ObjectProps<Button>);
    setEntity(entity: Entity): void;
    destroy(): void;
    isLoaded(): boolean;
    getVertexBuffer(): VertexBuffer;
    upgrade(json: SerializedObject, previousVersion: number): SerializedObject;
}
